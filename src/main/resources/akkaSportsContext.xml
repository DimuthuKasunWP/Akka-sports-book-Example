<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:akka="http://www.akkasource.org/schema/akka"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.akkasource.org/schema/akka
       http://scalablesolutions.se/akka/akka-0.10.xsd
       http://camel.apache.org/schema/spring
	   http://camel.apache.org/schema/spring/camel-spring.xsd">

	 <bean id="routeBuilder" class="se.scalablesolutions.akkasports.camel.CustomRouteBuilder" />
 
 	<context:annotation-config/>
 
  <camel:camelContext id="camelContext">
    <camel:routeBuilder ref="routeBuilder" />
  </camel:camelContext>
 
  <akka:camel-service>
    <akka:camel-context ref="camelContext" />
  </akka:camel-service>


<!-- <bean id="matchRegistry" class="se.scalablesolutions.akkasports.internal.MatchRegistry" scope="singleton"/>
 -->
	<akka:active-object id="matchRegistry"
		target="se.scalablesolutions.akkasports.internal.MatchRegistry" transactional="false" timeout="10000" scope="singleton"/>

	<akka:active-object id="match" interface="se.scalablesolutions.akkasports.MatchActor"
		target="se.scalablesolutions.akkasports.internal.MatchActorImpl"
		transactional="false" timeout="1000" scope="prototype">
		<!-- <property name="listener" ref="counter" />-->
	</akka:active-object>

 	<bean id="tracker" class="se.scalablesolutions.akkasports.internal.MatchEventTrackerImpl"/>  


	<bean id="receiver" class="se.scalablesolutions.akkasports.internal.EventReceiver">
		<property name="parser" ref="router"/>
	</bean>
 
<!-- 	<akka:active-object id="tracker"
		target="se.scalablesolutions.akkasports.internal.MatchEventTrackerImpl"
		transactional="false" timeout="10000" scope="singleton">

	</akka:active-object>
 -->

	<akka:active-object id="router"
		target="se.scalablesolutions.akkasports.internal.EventParserRouter"
		transactional="false" timeout="1000" scope="singleton">
		<property name="parsers" ref="parsers" />
	</akka:active-object>

	<util:list id="parsers" list-class="java.util.ArrayList">
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" /> 
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />
		<ref bean="parser" />		
	</util:list>

	<akka:active-object id="parser"
		target="se.scalablesolutions.akkasports.internal.TextEventParser"
		transactional="false" timeout="1000" scope="prototype">
		<property name="registry" ref="matchRegistry" />
		<property name="tracker" ref="tracker"/>
	</akka:active-object>


	<bean id="supervisorBeanPostProcessor" class="se.scalablesolutions.akkasports.supervision.ClassnameSupervisorBeanPostProcessor">
		<constructor-arg>
			<util:list>
				<value>se.scalablesolutions.akkasports.internal.TextEventParser</value>
				<!-- <value>se.scalablesolutions.akkasports.internal.MatchRegistry</value>-->
			</util:list>
		</constructor-arg>
	</bean>
</beans>